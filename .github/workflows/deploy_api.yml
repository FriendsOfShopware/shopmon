name: API Deploy

on:
  push:
    branches: [ main ]
    paths:
      - api/**
  workflow_dispatch:
jobs:
  api:
    runs-on: ubuntu-latest
    concurrency: 'api-deploy'
    steps:
    - name: Clone
      uses: actions/checkout@v4

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-api-pnpm-store-${{ hashFiles('api/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-api-pnpm-store-

    - name: Install dependencies
      working-directory: api
      run: pnpm install

    - name: Run Migrations
      working-directory: api
      run: node_modules/.bin/tsx migrate.ts
      env:
        LIBSQL_URL: "${{ secrets.LIBSQL_URL }}"
        LIBSQL_AUTH_TOKEN: "${{ secrets.LIBSQL_AUTH_TOKEN }}"

    - name: Generate JS
      working-directory: api
      run: pnpm run wrangler deploy --define SENTRY_RELEASE:"'${{ github.sha }}'" --dry-run --outdir=.

    - name: Create Sentry release
      uses: getsentry/action-release@v2
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      with:
        environment: production
        sourcemaps: './api/'
        ignore_empty: true

    - name: Publish API
      working-directory: api
      run: pnpm run wrangler deploy --define SENTRY_RELEASE:"'${{ github.sha }}'"
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
